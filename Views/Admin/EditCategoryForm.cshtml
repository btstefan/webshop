@using Shop.Models
@model Category

@{
    List<CategoryTree> categoryTree = ViewBag.CategoryTree;
    PrintT(categoryTree);
}


@functions
{
    private List<string> options = new List<string>();

    public void PrintT(List<CategoryTree> items)
    {
        foreach (var item in items)
        {
            string space = "";
            if (item.Category.ParentCategoryId != null)
                space = "&nbsp;&nbsp; ";

            if (Model.Id != item.Category.ParentCategoryId)
            {
                if (item.Category.Id != Model.Id)
                    options.Add($"<option value=\"{item.Category.Id}\">{space}{item.Category.Name}</option>\n");

                if (item.SubCategories.Count > 0)
                    PrintT(item.SubCategories);
            }
        }
    }
}
@using (Html.BeginForm("", "api/category/update", FormMethod.Post, new { id = "EditCategoryForm" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Id)
    @Html.HiddenFor(m => m.Created)

    <div class="form-group">
        @Html.LabelFor(m => m.Name)
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ParentCategoryId)
        <select name="ParentCategoryId" class="form-control" id="ParentCategoryId">
            <option value="">Root</option>
            @foreach (string option in options)
            {
                @Html.Raw(option)
            }
        </select>
        @Html.ValidationMessageFor(m => m.ParentCategoryId)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Active)
        <div class="form-check">
            @Html.RadioButtonFor(m => m.Active, true, new { @class = "form-check-input m-l-15", @id = "status01", @checked = "checked" })
            <label class="form-check-label m-l-15" for="status01">
                Active
            </label>
        </div>
        <div class="form-check">
            @Html.RadioButtonFor(m => m.Active, false, new { @class = "form-check-input m-l-15", @id = "status02", })
            <label class="form-check-label m-l-15" for="status02">
                Disabled
            </label>
        </div>
        @Html.ValidationMessageFor(m => m.Active)
    </div>
    <button type="submit" id="update-category" class="btn btn-primary col-md-12">Update</button>
    <br />
    <br />
    <p>Created: @Model.Created</p>
    <p>
        Modified:
        @if (@Model.Modified != null)
        {
            @Model.Modified
        }
        else
        {
            <span>Never</span>
        }
    </p>
}

@if (Model.ParentCategoryId != null)
{
    <script type="text/javascript">
        $(document).ready(function () {
            $('#ParentCategoryId option')
                .removeAttr('selected')
                .filter('[value=@Model.ParentCategoryId]')
                .attr('selected', true);
        });
    </script>
}
<script type="text/javascript">
    $(document).ready(function () {
        $.validator.unobtrusive.parse("#EditCategoryForm");
        $("#EditCategoryForm").submit(function (e) {
            e.preventDefault();

            var formUrl = $(this).attr('action');
            var formData = $(this).serialize();
            var checkForm = $(this).closest("form");

            if (checkForm.valid()) {
                $.ajax({
                    type: "POST",
                    url: formUrl,
                    data: formData,
                    success: function (data) {
                        if (data.Success) {
                            SendMessage(data.Message, 'success');
                            LoadCategories();
                            $("#editCategoryModal").hide();
                        }
                        else {
                            SendMessage(data.Message, 'error');
                        }
                    }
                });
            }
        });
    });
</script>

